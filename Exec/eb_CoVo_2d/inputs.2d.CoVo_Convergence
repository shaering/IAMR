#*******************************************************************************
# input testing the converge order of IAMR on an Euler vortex
#*******************************************************************************

#*************** Domain def. *******************
# Physical dimensions of the domain.
geometry.prob_lo     =  0. 0. 
geometry.prob_hi     =  1. 1. 

# Set to 0 if x-y coordinate system, set to 1 if r-z.
geometry.coord_sys   =  0

#Set to 1 if periodic in that direction
geometry.is_periodic =  1 1

# Boundary conditions 
# 0 = Interior/Periodic  3 = Symmetry
# 1 = Inflow             4 = SlipWall
# 2 = Outflow            5 = NoSlipWall
ns.lo_bc             = 0 0
ns.hi_bc             = 0 0
#***********************************************

#*************** AMR control *******************
amr.n_cell 		     = 64 64
amr.max_level		  = 0 # maximum number of levels of refinement
amr.regrid_int		  = 2 
amr.ref_ratio		  = 2 2

# maximum box size
amr.max_grid_size	  = 256

# Factor by which grids must be coarsenable.
amr.blocking_factor = 16
#***********************************************

#************ Refinement control ***************
ns.do_vorticity_ref = 1
#***********************************************

#********** Time stepping control **************
max_step 		= 50000
stop_time 		= 0.02
ns.cfl         = 0.2  # CFL number used to set dt
ns.init_shrink = 1.0  # factor multipling first time step
#***********************************************

#**************** IO control *******************
amr.check_int		   = 0
amr.plot_int		   = 10000
amr.derive_plot_vars = mag_vort avg_pressure gradpx gradpy
amr.probin_file 	   = probin.2d.CoVo

# verbosity
ns.v               = 1
amr.v              = 1
proj.v             = 1
nodal_proj.verbose = 2
mg.v               = 1
mg.verbose_linop   = 10
#***********************************************

#************* Algorithm control ***************
# for getting things started with eb skip some steps
ns.init_iter =  1             # Set number of initial iteration (default 1)
ns.do_mac_proj = 1            # Turn mac proj on/off (default on)
ns.do_init_proj = 1           # Turn initial ML projection on/off (default on)
ns.do_sync_proj = 1           # Turn synchronization projection on/off (default on)
ns.do_MLsync_proj = 1         # Turn MLsynchronization projection on/off (default on)

# Projection control/tols
projection.mg_rtol   =  1.0e-13
proj.agglomeration   = 1
proj.consolidation   = 0

# for eb need mlmg
proj.use_mlmg_solver = 1
mac.use_mlmg_solver = 1
#***********************************************

#**************** EB control *******************
# for no embedded boundary 
eb2.geom_type = all_regular
#***********************************************

#************** Physics control ****************
ns.vel_visc_coef        = 0.0
ns.scal_diff_coefs      = 0.0
ns.gravity              = 0.0
ns.do_LES               = 0

# LES inputs
ns.LES_model            = Smagorinsky
#ns.LES_model           = Sigma
ns.smago_Cs_cst         = 0.18
#***********************************************
